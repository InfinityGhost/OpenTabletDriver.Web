@{
    ViewData["Title"] = "Tablets";

    string GetStatus(DeviceSupportStatus supportStatus)
    {
        if (supportStatus == DeviceSupportStatus.HasQuirks)
            return "Has Quirks";
        if (supportStatus == DeviceSupportStatus.MissingFeatures)
            return "Missing Features";
        return supportStatus.ToString();
    }
}

@using OpenTabletDriver.Tablet
@model TabletsViewModel

<div class="container">
    <div class="card mb-4">
        <div class="card-body d-flex flex-sm-row flex-column">
            As there are many different revisions of tablets out there, you will need its model identifier to check compatibility with OpenTabletDriver.
            <br/>
            Usually, this value can be found either on the back of the tablet itself or on the box it came in.
        </div>
    </div>
    <div class="form-floating mb-3">
        <input id="searchInput" type="text" class="form-control" onkeyup="searchInput()" placeholder="Search"
               value="@Model.Search"/>
        <label for="searchInput">Search</label>
    </div>
    <table id="tablets" class="table table-hover">
        <thead>
            <tr>
                <th>Tablet</th>
                <th style="text-align: center">Status</th>
                <th>Notes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var configuration in Model.Configurations)
            {
                var name = configuration.ToString();
                var supportStatus = GetStatus(configuration.Metadata.SupportStatus);
                var notes = string.Join(", ", configuration.Metadata.Notes);

                <tr>
                    <td>@name</td>
                    <td style="text-align: center">@supportStatus</td>
                    <td>@notes</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts
{
    <script type="text/javascript">
        document.onreadystatechange = function () {
            if (document.readyState === "complete") {
                search();
            }
        };

        function searchInput() {
            let input = document.getElementById('searchInput');
            let text = input.value;
            let action = 'Tablets'
            if (text.length > 0) {
                action += '?search=' + encodeURIComponent(text);
            }
            window.history.replaceState('', '', action);
            search();
        }

        function search() {
            let input = document.getElementById('searchInput');
            let filter = input.value.toUpperCase();
            let table = document.getElementById('tablets');
            let rows = table.getElementsByTagName('tr');

            for (i = 0; i < rows.length; i++) {
                let row = rows[i];
                let td = row.getElementsByTagName('td')[0];
                if (td) {
                    let content = td.textContent || td.innerText;
                    row.style.display = content.toUpperCase().indexOf(filter) >= 0 ? '' : 'none';
                }
            }
        }
    </script>
}
